// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
        // write to a specific RAM location
        DMux8Way(in = load, sel = address[6..8], a = i1, b = i2, c = i3, d = i4, e = i5, f = i6, g = i7, h = i8);
 
        // 8 64-bit RAMs
        RAM64(in = in, load = i1, address = address[0..5], out = o1);
        RAM64(in = in, load = i2, address = address[0..5], out = o2);
        RAM64(in = in, load = i3, address = address[0..5], out = o3);
        RAM64(in = in, load = i4, address = address[0..5], out = o4);
        RAM64(in = in, load = i5, address = address[0..5], out = o5);
        RAM64(in = in, load = i6, address = address[0..5], out = o6);
        RAM64(in = in, load = i7, address = address[0..5], out = o7);
        RAM64(in = in, load = i8, address = address[0..5], out = o8);

        // return the value at a specific RAM address
        Mux8Way16(a = o1, b = o2, c = o3, d = o4, e = o5, f = o6, g = o7, h = o8, sel = address[6..8], out = out);
}
